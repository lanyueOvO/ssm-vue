{"remainingRequest":"D:\\Vue\\hello\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Vue\\hello\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Vue\\hello\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue\\hello\\src\\views\\order\\OrderMain.vue?vue&type=template&id=8f74ab48&scoped=true&","dependencies":[{"path":"D:\\Vue\\hello\\src\\views\\order\\OrderMain.vue","mtime":1636596213534},{"path":"D:\\Vue\\hello\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633489514687},{"path":"D:\\Vue\\hello\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1633489517829},{"path":"D:\\Vue\\hello\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633489514687},{"path":"D:\\Vue\\hello\\node_modules\\vue-loader\\lib\\index.js","mtime":1633489516986}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}